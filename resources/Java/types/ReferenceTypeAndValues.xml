<?xml version="1.0" encoding="UTF-8"?>
<Language xmlns="http://eaSTars.com/SoCoAn/lang">

	<ComplexType id="WildcardBounds" processor="aggregating">
		<StartNode type="keyword_extends">
			<NextNode ref="Separator"/>
		</StartNode>
		<StartNode type="keyword_super">
			<NextNode ref="Separator"/>
		</StartNode>
		<Node id="Separator" type="Separator">
			<Node type="ReferenceType"/>
		</Node>
	</ComplexType>

	<ComplexType id="Wildcard" processor="aggregating">
		<StartNode type="Annotations">
			<Node type="Separator">
				<NextNode ref="questionmark1"/>
			</Node>
		</StartNode>
		
		<StartNode id="questionmark1" type="questionmark">
			<Node type="Separator">
				<Node type="WildcardBounds"/>
			</Node>
			<Node type="Separator"/>
		</StartNode>
		
		<StartNode type="questionmark"/>
	</ComplexType>

	<ComplexType id="TypeArgument" processor="aggregating">
		<StartNode type="ReferenceType"/>
		<StartNode type="Wildcard"/>
	</ComplexType>
	
	<ComplexType id="TypeArgumentEntry" processor="aggregating" multiple="true">
		<StartNode type="Separator">
			<NextNode ref="comma"/>
		</StartNode>
		<StartNode id="comma" type="comma">
			<Node type="Separator">
				<Node type="TypeArgument"/>
			</Node>
			<Node type="TypeArgument"/>
		</StartNode>
	</ComplexType>
	
	<ComplexType id="TypeArgumentList" processor="aggregating">
		<StartNode type="TypeArgument">
			<Node type="TypeArgumentEntry" occurrence="ZeroOrOne"/>
		</StartNode>
	</ComplexType>
	
	<ComplexType id="TypeArguments" processor="aggregating">
		<StartNode type="lowerthan">
			<Node type="Separator">
				<NextNode ref="TypeArgumentList"/>
			</Node>
			<NextNode ref="TypeArgumentList"/>
		</StartNode>
		
		<Node id="TypeArgumentList" type="TypeArgumentList">
			<Node type="Separator">
				<Node type="greaterthan"/>
			</Node>
			<Node type="greaterthan"/>
		</Node>
	</ComplexType>
	
	<ComplexType id="AnnotationIdentifierTypeAgrument" processor="fallthrough">
		<StartNode type="Annotations">
			<Node type="Separator">
				<NextNode ref="Identifier1"/>
				<NextNode ref="Identifier2"/>
			</Node>
		</StartNode>
		
		<StartNode id="Identifier1" type="Identifier">
			<Node type="Separator">
				<Node type="TypeArguments"/>
			</Node>
		</StartNode>
		
		<StartNode id="Identifier2" type="Identifier"/>
	</ComplexType>
	
	<!-- NOTE: ClassType declaration should be handled carefully, extraction method should be added later -->
	<ComplexType id="ClassType" processor="fallthrough">
		<StartNode type="AnnotationIdentifierTypeAgrument"/>
	</ComplexType>
	
	<!-- NOTE: InterfaceType declaration should be handled carefully, extraction method should be added later -->
	<ComplexType id="InterfaceType" processor="fallthrough">
		<StartNode type="AnnotationIdentifierTypeAgrument"/>
	</ComplexType>
	
	<ComplexType id="ClassOrInterfaceType" processor="aggregating">
		<StartNode type="ClassType"/>
		<StartNode type="InterfaceType"/>
	</ComplexType>
	
	<ComplexType id="ClassesOrInterfaces" processor="aggregating" multiple="true">
		<StartNode type="ClassOrInterfaceType">
			<Node type="dot"/>
		</StartNode>
	</ComplexType>
	
	<ComplexType id="ClassOrInterfaceTypeCommon" processor="aggregating">
		<StartNode type="ClassesOrInterfaces">
			<NextNode ref="AnnotationIdentifierTypeAgrument"/>
		</StartNode>
			
		<StartNode id="AnnotationIdentifierTypeAgrument" type="AnnotationIdentifierTypeAgrument"/>
	</ComplexType>
	
	<ComplexType id="TypeVariable" processor="aggregating">
		<StartNode type="Annotations">
			<Node type="Separator">
				<NextNode ref="Identifier1"/>
			</Node>
		</StartNode>
		
		<StartNode id="Identifier1" type="Identifier"/>
	</ComplexType>
	
	<ComplexType id="Dims" processor="aggregating" multiple="true">
		<StartNode type="Annotations">
			<Node type="Separator">
				<NextNode ref="squarebracket_open"/>
			</Node>
			<NextNode ref="squarebracket_open"/>
		</StartNode>
		
		<StartNode id="squarebracket_open" type="squarebracket_open">
			<Node type="Separator">
				<Node type="squarebracket_close"/>
			</Node>
			<Node type="squarebracket_close"/>
		</StartNode>
	</ComplexType>
	
	<ComplexType id="ArrayType" processor="aggregating">
		<StartNode type="PrimitiveType">
			<Node type="Dims"/>
		</StartNode>
		<StartNode type="ClassOrInterfaceTypeCommon">
			<Node type="Dims"/>
		</StartNode>
		<StartNode type="TypeVariable">
			<Node type="Dims"/>
		</StartNode>
		<Node id="Separator" type="Separator" occurrence="ZeroOrOne">
			<Node type="Dims"/>
		</Node>
	</ComplexType>
	
	<ComplexType id="ReferenceType" processor="aggregating">
		<StartNode type="ArrayType"/>
		<StartNode type="ClassOrInterfaceTypeCommon"/>
		<StartNode type="TypeVariable"/>
	</ComplexType>
</Language>
