<?xml version="1.0" encoding="UTF-8"?>
<Language xmlns="http://eaSTars.com/SoCoAn/lang">
	<ComplexType id="IntegerTypeSuffix" processor="aggregating">
		<StartNode sequence="Any">
			<Node type="Suffixl"/>
			<Node type="SuffixL"/>
		</StartNode>
	</ComplexType>
	
	<ComplexType id="DigitOrUnderscore" processor="aggregating">
		<StartNode sequence="Any">
			<Node type="Digit"/>
			<Node type="Underscore" occurrence="ZeroOrMore"/>
		</StartNode>
	</ComplexType>
	
	<ComplexType id="DigitsAndUnderscores" processor="aggregating">
		<StartNode sequence="Order">
			<Node type="DigitOrUnderscore"/>
			<Node type="DigitOrUnderscore" occurrence="ZeroOrMore"/>
		</StartNode>
	</ComplexType>
	
	<!-- this definition must be fixed because it allows underscore on the end of the number which is not valid -->
	<ComplexType id="Digits" processor="aggregating">
		<StartNode sequence="Order">
			<Node type="Digit"/>
			<Node type="DigitsAndUnderscores" occurrence="ZeroOrOne"/>
		</StartNode>
	</ComplexType>
	
	<ComplexType id="DecimalNumeral" processor="aggregating">
		<StartNode sequence="Any">
			<Node type="Digit0"/>
			<GroupNode sequence="Order">
				<Node type="NonZeroDigit"/>
				<GroupNode sequence="Any">
					<Node type="Digits" occurrence="ZeroOrOne"/>
					<GroupNode sequence="Order">
						<Node type="Underscore"/>
						<Node type="Digits"/>
					</GroupNode>
				</GroupNode>
			</GroupNode>
		</StartNode>
	</ComplexType>
	
	<ComplexType id="DecimalIntegerLiteral" processor="aggregating">
		<StartNode sequence="Order">
			<Node type="DecimalNumeral"/>
			<Node type="IntegerTypeSuffix" occurrence="ZeroOrOne"/>
		</StartNode>
	</ComplexType>
	
	<ComplexType id="HexDigitOrUnderscore" processor="aggregating">
		<StartNode sequence="Any">
			<Node type="HexDigit"/>
			<Node type="Underscore" occurrence="ZeroOrMore"/>
		</StartNode>
	</ComplexType>
	
	<ComplexType id="HexDigitsAndUnderscores" processor="aggregating">
		<StartNode sequence="Order">
			<Node type="HexDigitOrUnderscore"/>
			<Node type="HexDigitOrUnderscore" occurrence="ZeroOrMore"/>
		</StartNode>
	</ComplexType>
	
	<!-- this definition must be fixed because it allows underscore on the end of the number which is not valid -->
	<ComplexType id="HexDigits" processor="aggregating">
		<StartNode sequence="Order">
			<Node type="HexDigit"/>
			<Node type="HexDigitsAndUnderscores"  occurrence="ZeroOrOne"/>
		</StartNode>
	</ComplexType>
	
	<ComplexType id="HexNumeral" processor="aggregating">
		<StartNode sequence="Order">
			<GroupNode sequence="Any">
				<Node type="Prefix0x"/>
				<Node type="Prefix0X"/>
			</GroupNode>
			<Node type="HexDigits"/>
		</StartNode>
	</ComplexType>
	
	<ComplexType id="HexIntegerLiteral" processor="aggregating">
		<StartNode sequence="Order">
			<Node type="HexNumeral"/>
			<Node type="IntegerTypeSuffix" occurrence="ZeroOrOne"/>
		</StartNode>
	</ComplexType>
	
	<ComplexType id="OctalDigitOrUnderscore" processor="aggregating">
		<StartNode sequence="Any">
			<Node type="OctalDigit"/>
			<Node type="Underscore"/>
		</StartNode>
	</ComplexType>
	
	<ComplexType id="OctalDigitsAndUnderscores" processor="aggregating">
		<StartNode sequence="Order">
			<Node type="OctalDigitOrUnderscore"/>
			<Node type="OctalDigitOrUnderscore" occurrence="ZeroOrMore"/>
		</StartNode>
	</ComplexType>
	
	<!-- this definition must be fixed because it allows underscore on the end of the number which is not valid -->
	<ComplexType id="OctalDigits" processor="aggregating">
		<StartNode  sequence="Order">
			<Node type="OctalDigit"/>
			<Node type="OctalDigitsAndUnderscores" occurrence="ZeroOrOne"/>
		</StartNode>
	</ComplexType>
	
	<ComplexType id="OctalNumeral" processor="aggregating">
		<StartNode sequence="Order">
			<Node type="Digit0"/>
			<Node type="Underscore" occurrence="ZeroOrMore"/>
			<Node type="OctalDigits"/>
		</StartNode>
	</ComplexType>
	
	<ComplexType id="OctalIntegerLiteral" processor="aggregating">
		<StartNode sequence="Order">
			<Node type="OctalNumeral"/>
			<Node type="IntegerTypeSuffix" occurrence="ZeroOrOne"/>
		</StartNode>
	</ComplexType>
	
	<ComplexType id="BinaryDigitOrUnderscore" processor="aggregating">
		<StartNode sequence="Any">
			<Node type="BinaryDigit"/>
			<Node type="Underscore"/>
		</StartNode>
	</ComplexType>
	
	<ComplexType id="BinaryDigitsAndUnderscores" processor="aggregating">
		<StartNode sequence="Order">
			<Node type="BinaryDigitOrUnderscore"/>
			<Node type="BinaryDigitOrUnderscore" occurrence="ZeroOrMore"/>
		</StartNode>
	</ComplexType>
	
	<!-- this definition must be fixed because it allows underscore on the end of the number which is not valid -->
	<ComplexType id="BinaryDigits" processor="aggregating">
		<StartNode sequence="Order">
			<Node type="BinaryDigit"/>
			<Node type="BinaryDigitsAndUnderscores" occurrence="ZeroOrOne"/>
		</StartNode>
	</ComplexType>

	<ComplexType id="BinaryNumeral" processor="aggregating">
		<StartNode sequence="Order">
			<GroupNode sequence="Any">
				<Node type="Prefix0b"/>
				<Node type="Prefix0B"/>
			</GroupNode>
			<Node type="BinaryDigits"/>
		</StartNode>
	</ComplexType>	
	
	<ComplexType id="BinaryIntegerLiteral" processor="aggregating">
		<StartNode sequence="Order">
			<Node type="BinaryNumeral"/>
			<Node type="IntegerTypeSuffix" occurrence="ZeroOrOne"/>
		</StartNode>
	</ComplexType>
	
	<ComplexType id="IntegerLiteral" processor="aggregating">
		<StartNode sequence="Any">
			<Node type="HexIntegerLiteral"/>
			<Node type="BinaryIntegerLiteral"/>
			<Node type="OctalIntegerLiteral"/>
			<Node type="DecimalIntegerLiteral"/>
		</StartNode>
	</ComplexType>
</Language>
